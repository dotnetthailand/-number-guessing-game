@model GameIndexViewModel
@inject IOptions<ApplicationConfiguration> config
@{
  ViewData["Title"] = "Number Guessing Game";
}

@Html.React(
"NumberGuessingGame.GameForm",
new
{
// https://stackoverflow.com/a/48538207/1872200
//returnUrlRelativeToRoot = Context.Request.Query["returnUrl"]
gameId = Model.Game.Id
}
)
<div class="main-container -none-background">
  <table class="table table-played">
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">Guessed number</th>
        <th scope="col">Name</th>
        <th scope="col">Played at</th>
      </tr>
    </thead>
    <tbody>

      @for (var index = 0; index < Model.Players.Count; index++)
      {
        <tr>
          @{
            var player = Model.Players[0];
          }
          <td scope="row">@(index + 1)</td>
          <td scope="row">@string.Format("{0:00}", player.GuessedNumber + index * 7)</td>
          <td scope="row" class="-text-left">@string.Format("{0}xxxxx", player.User.FirstName.Substring(0,2))</td>
          <td scope="row">@player.PlayedAtUtc</td>
        </tr>
      }
    </tbody>
  </table>
</div>
